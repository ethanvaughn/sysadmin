/* jStat - Statistical Package - rev34
 * Copyright 2010, Trevor Norris
 * This document is licensed as free software under the terms of the
 * MIT License: http://www.opensource.org/licenses/mit-license.php */
(function(window){var jStat={sum:function(arr){var sum=0,i=arr.length-1;for(i;i>=0;i--){sum+=arr[i];};return sum;},min:function(arr){var min=arr[0],i=arr.length-1;for(i;i>=0;i--){if(arr[i]<min){min=arr[i];};};return min;},max:function(arr){var max=arr[0],i=arr.length-1;for(i;i>=0;i--){if(arr[i]>max){max=arr[i];};};return max;},mean:function(arr){return this.sum(arr)/arr.length;},median:function(arr){var arrsort=arr.sort(function(a,b){return a-b;}),arrLen=arr.length,median;if(arrLen%2===0){median=(arrsort[(arrLen/2)-1]+arrsort[(arrLen/2)])/2;}else{median=arrsort[Math.floor(arrLen/2)];};return median;},mode:function(arr){var arrsort=arr.sort(function(a,b){return a-b;}),arrLen=arr.length,count=1,position=0,frequencies=[],values=[],frequenciesLen,i,max;for(i=0;i<arrLen;i++){if(arrsort[i]==arrsort[i+1]){count++;}else{frequencies[position]=count;values[position]=arrsort[i];position++;count=1;};};max=frequencies[0];frequenciesLen=frequencies.length;for(i=0;i<frequenciesLen;i++){if(frequencies[i]>max){max=frequencies[i];position=i;};};return values[position];},range:function(arr){var arrsort=arr.sort(function(a,b){return a-b;});return arrsort[arrsort.length-1]-arrsort[0];},variance:function(arr){var mean=this.mean(arr),stSum=0,i=arr.length-1;for(i;i>=0;i--){stSum+=Math.pow((arr[i]-mean),2);};return stSum/(arr.length-1);},stdev:function(arr){return Math.sqrt(this.variance(arr));},meandev:function(arr){var devSum=0,mean=this.mean(arr),i=arr.length-1;for(i;i>=0;i--){devSum+=Math.abs(arr[i]-mean);};return devSum/arr.length;},meddev:function(arr){var devSum=0,median=this.median(arr),i=arr.length-1;for(i;i>=0;i--){devSum+=Math.abs(arr[i]-median);};return devSum/arr.length;},factorial:function(n){var fval=1;for(n;n>0;n--){fval*=n;};return fval;},combination:function(n,k){return(this.factorial(n)/this.factorial(k))/this.factorial(n-k);},permutation:function(n,r){return this.factorial(n)/this.factorial(n-r);}};window.jStat=jStat;})(window);